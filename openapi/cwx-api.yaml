openapi: 3.0.0
info:
  version: "0.6.0"
  title: 'CaseWorx API'
  termsOfService: https://www.wolterskluwer-online.de/informationen/datenschutz
  contact: 
    name: Wolters Kluwer Deutschland GmbH
    url: https://www.caseworx-baurecht.de/informationen/kontakt
    email: caseworx@wolterskluwer.com
  license:
    name: GNU Affero General Public License version 3
    url: https://www.gnu.org/licenses/agpl-3.0.html
  description: |
    [CaseWorx](https://app.caseworx-baurecht.de/) API

servers:
  - description: Production environment
    url: https://api.caseworx-baurecht.de/v0

tags: 
  - name: access-control
    description: Operations on ACLs
  - name: cases
    description: Operations on cases
  - name: documents
    description: Operations on document resources
  - name: media
    description: Operations on document media (aka the body of the document as opposed to metadata)
  - name: changes
    description: Operations on changes (aka audit log)
  
security:
  - apiKeyAuth: []
  - oAuth2AuthCode:
    - openid
    - profile
    - urn:wkde:cwx:api    

paths:
  /cases:
    parameters:
      - $ref: 'cwx-commons-domain.yaml#/components/parameters/CorrelationId'

    # -------- List cases --------
    get:
      tags: 
        - cases
      description: Returns a collection of all cases the user has access to
      responses:
        '200':
          description: Returns an array of cases
          headers:
            x-cwx-cid:
              $ref: 'cwx-commons-domain.yaml#/components/headers/x-cwx-cid'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'cwx-case-domain.yaml#/components/schemas/Case'
        '400':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error400'
        '401':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error401'
        '403':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error403'
        '429':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error429'
        '500':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error500'

    # -------- Create a case --------
    post:
      tags:
        - cases
      description: Creates a new case resource
      requestBody:
        $ref: 'cwx-case-domain.yaml#/components/requestBodies/CreateCase'
      responses:
        '201':
          $ref: 'cwx-case-domain.yaml#/components/responses/CaseCreatedOK'
        '400':
          # implementation: throw 400 if request parameters don't satisfy the validation criteria
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error400'
        '401':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error401'
        '403':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error403'
        '429':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error429'
        '500':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error500'

  /cases/{caseId}:
    parameters:
      - $ref: 'cwx-case-domain.yaml#/components/parameters/CaseId'
      - $ref: 'cwx-commons-domain.yaml#/components/parameters/CorrelationId'

    # -------- Delete a case --------
    delete:
      tags:
        - cases
      description: Deletes a case together with all documents stored within and their relevant media
      responses:
        '202':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Info202'
        '204':
          description: Confirms that the operation has been executed successfully
          headers:
            x-cwx-cid:
              $ref: 'cwx-commons-domain.yaml#/components/headers/x-cwx-cid'          
        '400':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error400'
        '401':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error401'
        '403':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error403'
        '404':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error404'
        '429':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error429'
        '500':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error500'

  /cases/{caseId}/acl:
    parameters:
      - $ref: 'cwx-case-domain.yaml#/components/parameters/CaseId'
      - $ref: 'cwx-commons-domain.yaml#/components/parameters/CorrelationId'
    
    put:
      tags: 
        - access-control
      description: |
        Replace the Access Control List (ACL) of a case.  
        This operation replaces the ACL of a case. All recipients must unequivocally resolve to existing user entities - each recipient must match exactly one existing user entity, otherwise an error will be returned and no changes to the ACL will be made.  
        The access rights of the case owner cannot be changed - the owner has always read/write permissions. If the owner of the case is found on the recipients list, it will be ignored and no error will be raised.  
        The user on whose behalf the request is executed must have write permission to the case.  
        *Compliancy with GDPR*: this operation expects the API client to potentially send personal data as defined by the General Data Protection Regulation. The owner of the client application should ensure that an appropriate legal framework for personal data processing exists.
      requestBody:
        $ref: 'cwx-access_ctrl-domain.yaml#/components/requestBodies/SetAcl'
      responses:
        '201':
          description: Confirms successful change of the case ACL
          headers:
            x-cwx-cid:
              $ref: 'cwx-commons-domain.yaml#/components/headers/x-cwx-cid'
        '400':
          $ref: 'cwx-access_ctrl-domain.yaml#/components/responses/SetAclError400'
        '401':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error401'
        '403':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error403'
        '404':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error404'
        '429':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error429'
        '500':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error500'
  
  /cases/changes:
    $ref: 'cwx-change-domain.yaml#/components/pathitems/Changes'
    
  /cases/changes/startPageToken:
    $ref: 'cwx-change-domain.yaml#/components/pathitems/StartPageToken'

  /cases/{caseId}/documents:
    parameters:
      - $ref: 'cwx-case-domain.yaml#/components/parameters/CaseId'
      - $ref: 'cwx-commons-domain.yaml#/components/parameters/CorrelationId'


    # -------- List selected properties of all documents in a case --------
    get:
      tags:
        - documents
      description: Returns selected properties of documents in a case. At present `id`, `title`, `date` and `types` are returned. Implementation may return other properties as well. Proper partial response will be implemented later. If a particular document exists only in its raw layer (not enriched) only `id` is returned.
      responses:
        '200':
          description: Returns an array of documents in a case with available properties
          headers:
            x-cwx-cid:
              $ref: 'cwx-commons-domain.yaml#/components/headers/x-cwx-cid'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: 'cwx-document-domain.yaml#/components/schemas/DocumentRaw'
                    - $ref: 'cwx-document-domain.yaml#/components/schemas/Document'
        '400':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error400'
        '401':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error401'
        '403':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error403'
        '404':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error404'
        '429':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error429'
        '500':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error500'

    # -------- Create a new document in a case by document body upload --------
    post:
      tags:
        - media
      description: |
        Uploads a document media. The upload results in creating a document resource.  
        At present this is the only way to create a document resource - the creation flow starts with uploading the document media. Once the media is processed, the document resource receives its basic collection of metadata assigned by the system.
      parameters:
        - $ref: 'cwx-media-domain.yaml#/components/parameters/ContentDisposition'
        - $ref: 'cwx-media-domain.yaml#/components/parameters/ContentLength'
        - $ref: 'cwx-media-domain.yaml#/components/parameters/ContentType'

      requestBody:
        $ref: 'cwx-media-domain.yaml#/components/requestBodies/SimpleMediaUpload'

      responses:
        '201':
          $ref: 'cwx-media-domain.yaml#/components/responses/SimpleMediaUploadOK'
        '400':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error400'
        '401':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error401'
        '403':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error403'
        '411':
          $ref: 'cwx-media-domain.yaml#/components/responses/Error411'
        '413':
          $ref: 'cwx-media-domain.yaml#/components/responses/Error413'
        '415':
          $ref: 'cwx-media-domain.yaml#/components/responses/Error415'
        '429':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error429'
        '500':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error500'

  /cases/{caseId}/documents/{documentId}:
    parameters:
      - $ref: 'cwx-case-domain.yaml#/components/parameters/CaseId'
      - $ref: 'cwx-document-domain.yaml#/components/parameters/DocumentId'
      - $ref: 'cwx-commons-domain.yaml#/components/parameters/CorrelationId'

    # -------- Get document metadata --------
    get:
      tags:
        - documents
      description: Returns properties of a document
      responses:
        '200':
          description: Returns properties of a document
          headers:
            x-cwx-cid:
              $ref: 'cwx-commons-domain.yaml#/components/headers/x-cwx-cid'
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: 'cwx-document-domain.yaml#/components/schemas/DocumentRaw'
                  - $ref: 'cwx-document-domain.yaml#/components/schemas/Document'

        '400':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error400'
        '401':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error401'
        '403':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error403'
        '404':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error404'
        '429':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error429'
        '500':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error500'

    # -------- Delete a document --------
    delete:
      tags:
        - documents
      description: Deletes a document together with all associated media
      responses:
        '202':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Info202'
        '204':
          description: Confirms that the operation has been executed successfully
          headers:
            x-cwx-cid:
              $ref: 'cwx-commons-domain.yaml#/components/headers/x-cwx-cid'

        '400':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error400'
        '401':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error401'
        '403':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error403'
        '404':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error404'
        '429':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error429'
        '500':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error500'

  /cases/{caseId}/documents/{documentId}/media:
    parameters:
      - $ref: 'cwx-case-domain.yaml#/components/parameters/CaseId'
      - $ref: 'cwx-document-domain.yaml#/components/parameters/DocumentId'
      - $ref: 'cwx-commons-domain.yaml#/components/parameters/CorrelationId'

    # -------- Download a document media --------
    get:
      tags: 
        - media
      description: |
        Returns a document media for download. At this point it is implied that the document media to be downloaded must exist in its final layer (reviewed and saved by the user). The downloaded final layer is always with annotations if there are any. Future versions of the API may implement query parameters to control layer and/or the presence of the annotations.  
      parameters:
        - $ref: 'cwx-media-domain.yaml#/components/parameters/LayerQueryRef'
        - $ref: 'cwx-media-domain.yaml#/components/parameters/Accept'
        - $ref: 'cwx-media-domain.yaml#/components/parameters/Range'

      responses:
        '200':
          $ref: 'cwx-media-domain.yaml#/components/responses/SimpleMediaDownloadOK'
        '202':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Info202'
        '206':
          $ref: 'cwx-media-domain.yaml#/components/responses/PartialMediaDownloadOK'
        '400':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error400'
        '401':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error401'
        '403':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error403'
        '404':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error404'
        '406':
          $ref: 'cwx-media-domain.yaml#/components/responses/Error406'
        '416':
          $ref: 'cwx-media-domain.yaml#/components/responses/Error416'
        '429':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error429'
        '500':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error500'

  /uploads:
    parameters:
      - $ref: 'cwx-commons-domain.yaml#/components/parameters/CorrelationId'

    post:
      tags:
        - media
      description: |
        Creates an upload manager resource for executing partial uploads of a document media for a specified case.
      parameters:
        - $ref: 'cwx-case-domain.yaml#/components/parameters/CaseQueryRef'
      requestBody:
        $ref: 'cwx-media-domain.yaml#/components/requestBodies/PartialUploadInit'

      responses:
        '201':
          $ref: 'cwx-media-domain.yaml#/components/responses/UploadManagerCreatedOK'
        '400':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error400'
        '401':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error401'
        '403':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error403'
        '429':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error429'
        '500':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error500'

  /uploads/{uploadId}:
    parameters:
      - $ref: 'cwx-media-domain.yaml#/components/parameters/UploadManagerId'
      - $ref: 'cwx-commons-domain.yaml#/components/parameters/CorrelationId'

    put:
      tags:
        - media
      description: |
        Use an upload manager with the specified ID to exceute uploads of a document media part.  
        The client must ensure that the last part is only uploaded when all previous uploads have finished successfully.
      parameters:
        - $ref: 'cwx-media-domain.yaml#/components/parameters/ContentLength'
        - $ref: 'cwx-media-domain.yaml#/components/parameters/ContentRange'
        - $ref: 'cwx-media-domain.yaml#/components/parameters/PartialUploadContentType'

      responses:
        '202':
          description: Delivered part of the media object has been successfully uploaded. When all parts of the media resource have been uploaded, the resource will be automatically assembled. Client is expected to manage the upload and determine when all parts have been successfully uploaded.
        '400':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error400'
        '401':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error401'
        '403':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error403'
        '404':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error404'
        '411':
          $ref: 'cwx-media-domain.yaml#/components/responses/Error411'
        '413':
          $ref: 'cwx-media-domain.yaml#/components/responses/Error413'
        '415':
          $ref: 'cwx-media-domain.yaml#/components/responses/Error415'
        '429':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error429'
        '500':
          $ref: 'cwx-commons-domain.yaml#/components/responses/Error500'

  /changes:
    $ref: 'cwx-change-domain.yaml#/components/pathitems/Changes'

  /changes/startPageToken:
    $ref: 'cwx-change-domain.yaml#/components/pathitems/StartPageToken'

components:
  securitySchemes:
    apiKeyAuth:
      description: API key authorization scheme
      type: apiKey
      in: header
      name: x-api-key

    oAuth2AuthCode:
      description: OAuth2 authorization scheme for production endpoint - only Authorization Code grant is supported for production configurations
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://login.wolterskluwer.eu/as/authorization.oauth2?pfidpadapterid=JurionCompositeAdapter'
          tokenUrl: 'https://login.wolterskluwer.eu/as/token.oauth2'
          scopes:
            openid: set OpenID context
            profile: OpenID profile
            urn:wkde:cwx:api: CWX API access